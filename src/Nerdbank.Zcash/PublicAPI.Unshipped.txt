#nullable enable
abstract Nerdbank.Zcash.UnifiedAddress.Receivers.get -> System.Collections.Generic.IReadOnlyList<Nerdbank.Zcash.ZcashAddress!>!
abstract Nerdbank.Zcash.ZcashAddress.GetPoolReceiver<TPoolReceiver>() -> TPoolReceiver?
abstract Nerdbank.Zcash.ZcashAddress.Network.get -> Nerdbank.Zcash.ZcashNetwork
Nerdbank.Zcash.InvalidAddressException
Nerdbank.Zcash.InvalidAddressException.InvalidAddressException() -> void
Nerdbank.Zcash.InvalidAddressException.InvalidAddressException(string? message) -> void
Nerdbank.Zcash.InvalidAddressException.InvalidAddressException(string? message, System.Exception? inner) -> void
Nerdbank.Zcash.IPoolReceiver
Nerdbank.Zcash.IPoolReceiver.Pool.get -> Nerdbank.Zcash.Pool
Nerdbank.Zcash.IPoolReceiver.Span.get -> System.ReadOnlySpan<byte>
Nerdbank.Zcash.IPoolReceiver.UnifiedReceiverTypeCode.get -> byte
Nerdbank.Zcash.OrchardAddress
Nerdbank.Zcash.OrchardAddress.OrchardAddress(in Nerdbank.Zcash.OrchardReceiver receiver, Nerdbank.Zcash.ZcashNetwork network = Nerdbank.Zcash.ZcashNetwork.MainNet) -> void
Nerdbank.Zcash.OrchardReceiver
Nerdbank.Zcash.OrchardReceiver.D.get -> System.ReadOnlySpan<byte>
Nerdbank.Zcash.OrchardReceiver.OrchardReceiver() -> void
Nerdbank.Zcash.OrchardReceiver.OrchardReceiver(System.ReadOnlySpan<byte> d, System.ReadOnlySpan<byte> pkd) -> void
Nerdbank.Zcash.OrchardReceiver.Pkd.get -> System.ReadOnlySpan<byte>
Nerdbank.Zcash.OrchardReceiver.Pool.get -> Nerdbank.Zcash.Pool
Nerdbank.Zcash.OrchardReceiver.Span.get -> System.ReadOnlySpan<byte>
Nerdbank.Zcash.ParseError
Nerdbank.Zcash.ParseError.InvalidAddress = 1 -> Nerdbank.Zcash.ParseError
Nerdbank.Zcash.ParseError.UnrecognizedAddressType = 0 -> Nerdbank.Zcash.ParseError
Nerdbank.Zcash.Pool
Nerdbank.Zcash.Pool.Orchard = 3 -> Nerdbank.Zcash.Pool
Nerdbank.Zcash.Pool.Sapling = 2 -> Nerdbank.Zcash.Pool
Nerdbank.Zcash.Pool.Sprout = 1 -> Nerdbank.Zcash.Pool
Nerdbank.Zcash.Pool.Transparent = 0 -> Nerdbank.Zcash.Pool
Nerdbank.Zcash.SaplingAddress
Nerdbank.Zcash.SaplingAddress.SaplingAddress(in Nerdbank.Zcash.SaplingReceiver receiver, Nerdbank.Zcash.ZcashNetwork network = Nerdbank.Zcash.ZcashNetwork.MainNet) -> void
Nerdbank.Zcash.SaplingReceiver
Nerdbank.Zcash.SaplingReceiver.D.get -> System.ReadOnlySpan<byte>
Nerdbank.Zcash.SaplingReceiver.Pkd.get -> System.ReadOnlySpan<byte>
Nerdbank.Zcash.SaplingReceiver.Pool.get -> Nerdbank.Zcash.Pool
Nerdbank.Zcash.SaplingReceiver.SaplingReceiver() -> void
Nerdbank.Zcash.SaplingReceiver.SaplingReceiver(System.ReadOnlySpan<byte> d, System.ReadOnlySpan<byte> pkd) -> void
Nerdbank.Zcash.SaplingReceiver.Span.get -> System.ReadOnlySpan<byte>
Nerdbank.Zcash.SproutAddress
Nerdbank.Zcash.SproutAddress.SproutAddress(in Nerdbank.Zcash.SproutReceiver receiver, Nerdbank.Zcash.ZcashNetwork network = Nerdbank.Zcash.ZcashNetwork.MainNet) -> void
Nerdbank.Zcash.SproutReceiver
Nerdbank.Zcash.SproutReceiver.Apk.get -> System.ReadOnlySpan<byte>
Nerdbank.Zcash.SproutReceiver.PkEnc.get -> System.ReadOnlySpan<byte>
Nerdbank.Zcash.SproutReceiver.Pool.get -> Nerdbank.Zcash.Pool
Nerdbank.Zcash.SproutReceiver.Span.get -> System.ReadOnlySpan<byte>
Nerdbank.Zcash.SproutReceiver.SproutReceiver() -> void
Nerdbank.Zcash.SproutReceiver.SproutReceiver(System.ReadOnlySpan<byte> apk, System.ReadOnlySpan<byte> pkEnc) -> void
Nerdbank.Zcash.TransparentAddress
Nerdbank.Zcash.TransparentAddress.TransparentAddress(string! address) -> void
Nerdbank.Zcash.TransparentP2PKHAddress
Nerdbank.Zcash.TransparentP2PKHAddress.TransparentP2PKHAddress(in Nerdbank.Zcash.TransparentP2PKHReceiver receiver, Nerdbank.Zcash.ZcashNetwork network = Nerdbank.Zcash.ZcashNetwork.MainNet) -> void
Nerdbank.Zcash.TransparentP2PKHReceiver
Nerdbank.Zcash.TransparentP2PKHReceiver.Pool.get -> Nerdbank.Zcash.Pool
Nerdbank.Zcash.TransparentP2PKHReceiver.Span.get -> System.ReadOnlySpan<byte>
Nerdbank.Zcash.TransparentP2PKHReceiver.TransparentP2PKHReceiver() -> void
Nerdbank.Zcash.TransparentP2PKHReceiver.TransparentP2PKHReceiver(Nerdbank.Cryptocurrencies.Bip32HDWallet.PublicKey! publicKey) -> void
Nerdbank.Zcash.TransparentP2PKHReceiver.TransparentP2PKHReceiver(System.ReadOnlySpan<byte> p2pkh) -> void
Nerdbank.Zcash.TransparentP2PKHReceiver.ValidatingKeyHash.get -> System.ReadOnlySpan<byte>
Nerdbank.Zcash.TransparentP2SHAddress
Nerdbank.Zcash.TransparentP2SHAddress.TransparentP2SHAddress(in Nerdbank.Zcash.TransparentP2SHReceiver receiver, Nerdbank.Zcash.ZcashNetwork network = Nerdbank.Zcash.ZcashNetwork.MainNet) -> void
Nerdbank.Zcash.TransparentP2SHReceiver
Nerdbank.Zcash.TransparentP2SHReceiver.Pool.get -> Nerdbank.Zcash.Pool
Nerdbank.Zcash.TransparentP2SHReceiver.ScriptHash.get -> System.ReadOnlySpan<byte>
Nerdbank.Zcash.TransparentP2SHReceiver.Span.get -> System.ReadOnlySpan<byte>
Nerdbank.Zcash.TransparentP2SHReceiver.TransparentP2SHReceiver() -> void
Nerdbank.Zcash.TransparentP2SHReceiver.TransparentP2SHReceiver(System.ReadOnlySpan<byte> p2sh) -> void
Nerdbank.Zcash.UnifiedAddress
Nerdbank.Zcash.UnifiedAddress.UnifiedAddress(string! address) -> void
Nerdbank.Zcash.ZcashAddress
Nerdbank.Zcash.ZcashAddress.Address.get -> string!
Nerdbank.Zcash.ZcashAddress.Equals(Nerdbank.Zcash.ZcashAddress? other) -> bool
Nerdbank.Zcash.ZcashAddress.ZcashAddress(string! address) -> void
Nerdbank.Zcash.ZcashNetwork
Nerdbank.Zcash.ZcashNetwork.MainNet = 0 -> Nerdbank.Zcash.ZcashNetwork
Nerdbank.Zcash.ZcashNetwork.TestNet = 1 -> Nerdbank.Zcash.ZcashNetwork
override Nerdbank.Zcash.OrchardAddress.GetPoolReceiver<TPoolReceiver>() -> TPoolReceiver?
override Nerdbank.Zcash.OrchardAddress.Network.get -> Nerdbank.Zcash.ZcashNetwork
override Nerdbank.Zcash.OrchardAddress.Receivers.get -> System.Collections.Generic.IReadOnlyList<Nerdbank.Zcash.ZcashAddress!>!
override Nerdbank.Zcash.SaplingAddress.GetPoolReceiver<TPoolReceiver>() -> TPoolReceiver?
override Nerdbank.Zcash.SaplingAddress.Network.get -> Nerdbank.Zcash.ZcashNetwork
override Nerdbank.Zcash.SproutAddress.GetPoolReceiver<TPoolReceiver>() -> TPoolReceiver?
override Nerdbank.Zcash.SproutAddress.Network.get -> Nerdbank.Zcash.ZcashNetwork
override Nerdbank.Zcash.TransparentP2PKHAddress.GetPoolReceiver<TPoolReceiver>() -> TPoolReceiver?
override Nerdbank.Zcash.TransparentP2PKHAddress.Network.get -> Nerdbank.Zcash.ZcashNetwork
override Nerdbank.Zcash.TransparentP2SHAddress.GetPoolReceiver<TPoolReceiver>() -> TPoolReceiver?
override Nerdbank.Zcash.TransparentP2SHAddress.Network.get -> Nerdbank.Zcash.ZcashNetwork
override Nerdbank.Zcash.UnifiedAddress.Network.get -> Nerdbank.Zcash.ZcashNetwork
override Nerdbank.Zcash.ZcashAddress.Equals(object? obj) -> bool
override Nerdbank.Zcash.ZcashAddress.GetHashCode() -> int
override Nerdbank.Zcash.ZcashAddress.ToString() -> string!
static Nerdbank.Zcash.OrchardReceiver.UnifiedReceiverTypeCode.get -> byte
static Nerdbank.Zcash.SaplingReceiver.UnifiedReceiverTypeCode.get -> byte
static Nerdbank.Zcash.SproutReceiver.UnifiedReceiverTypeCode.get -> byte
static Nerdbank.Zcash.TransparentP2PKHReceiver.UnifiedReceiverTypeCode.get -> byte
static Nerdbank.Zcash.TransparentP2SHReceiver.UnifiedReceiverTypeCode.get -> byte
static Nerdbank.Zcash.UnifiedAddress.Create(System.Collections.Generic.IReadOnlyCollection<Nerdbank.Zcash.ZcashAddress!>! receivers) -> Nerdbank.Zcash.UnifiedAddress!
static Nerdbank.Zcash.ZcashAddress.implicit operator string?(Nerdbank.Zcash.ZcashAddress? address) -> string?
static Nerdbank.Zcash.ZcashAddress.Parse(string! address) -> Nerdbank.Zcash.ZcashAddress!
static Nerdbank.Zcash.ZcashAddress.TryParse(string! address, out Nerdbank.Zcash.ZcashAddress? result) -> bool
static Nerdbank.Zcash.ZcashAddress.TryParse(string! address, out Nerdbank.Zcash.ZcashAddress? result, out Nerdbank.Zcash.ParseError? errorCode, out string? errorMessage) -> bool
